@page
@model LoginModel
@using Microsoft.Extensions.Configuration
@using ConformityCheck.Web.Infrastructure.Settings

@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Log in";
}

<section class="display-data-wrapper">
    <section class="display-data-container">
        <section class="display-data-header">
            <article class="title-container">
                <h4 class="title">
                    @this.ViewData["Title"]
                </h4>
            </article>

            <article class="display-data-body user-data">
                <article class="form-data-container align-flex-start">
                    <article class="data-container">
                        <h4 class="large-margin-vertical">Use a local account to log in.</h4>
                        <hr />
                        <form id="account" method="post" class="input-group">
                            <div asp-validation-summary="All" class="text-danger"></div>
                            <input type="hidden" id="RecaptchaValue" name="RecaptchaValue" />
                            <div class="form-field-container large-margin-vertical">
                                <label asp-for="Input.Email"></label>
                                <input asp-for="Input.Email" class="form-control" autofocus />
                                <span asp-validation-for="Input.Email" class="text-danger"></span>
                            </div>
                            <div class="form-field-container large-margin-vertical">
                                <label asp-for="Input.Password"></label>
                                <input asp-for="Input.Password" class="form-control" />
                                <span asp-validation-for="Input.Password" class="text-danger"></span>
                            </div>
                            <div class="form-field-container large-margin-vertical">
                                <div class="checkbox">
                                    <label asp-for="Input.RememberMe">
                                        <input asp-for="Input.RememberMe" />
                                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                                    </label>
                                </div>
                            </div>
                            <div class="form-field-container large-margin-vertical">
                                <button type="submit" class="btn btn-submit">Log in</button>
                            </div>

                        </form>
                    </article>

                    <article class="data-container">
                        <h4 class="large-margin-vertical">Use another service to log in.</h4>
                        <hr />
                        @{
                            if ((Model.ExternalLogins?.Count ?? 0) == 0)
                            {
                                <div>
                                    <p>
                                        There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                        for details on setting up this ASP.NET application to support logging in via external services.
                                    </p>
                                </div>
                            }
                            else
                            {
                                <form id="external-account"
                                      asp-page="./ExternalLogin"
                                      asp-route-returnUrl="@Model.ReturnUrl"
                                      method="post"
                                      class="input-group">
                                    <div class="form-field-container">
                                        <p>
                                            @foreach (var provider in Model.ExternalLogins)
                                            {
                                                <button type="submit" class="btn btn-submit" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                            }
                                        </p>
                                    </div>
                                </form>
                            }
                        }
                        <hr />
                        <div class="form-field-container large-margin-vertical">
                            <p>
                                <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                            </p>
                            <p>
                                <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                            </p>
                            <p>
                                <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                            </p>
                        </div>
                    </article>
                </article>
            </article>
        </section>

        <section class="display-data-footer">
        </section>
    </section>
</section>

@{
    IConfiguration recaptchaSettingsSection = this.Configuration.GetSection(ReCaptchaSettings.ReCaptcha);
    var recaptchaSettings = recaptchaSettingsSection.Get<ReCaptchaSettings>();
}

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script src="https://www.google.com/recaptcha/api.js?render=@recaptchaSettings.SiteKey"></script>
    <script>
        grecaptcha.ready(function () {
            grecaptcha.execute('@recaptchaSettings.SiteKey', { action: 'article_create' })
                .then(function (token) {
                    //console.log('Script reCaptcha loaded!');
                    //console.log('token' + token);
                    document.getElementById('RecaptchaValue').value = token;
                })
                .catch(err => {
                    //console.log('Error: ');
                    //console.log(err.description);
                    //console.log(err);
                });
        });
    </script>

    @*<script src="https://www.google.com/recaptcha/api.js?render=@this.Configuration["GoogleReCaptchaV3Settings:SiteKey"]"></script>
        <script>
            grecaptcha.ready(function () {
                grecaptcha.execute('@this.Configuration["GoogleReCaptchaV3Settings:SiteKey"]', { action: 'article_create' })
                    .then(function (token) {
                        console.log('Script reCaptcha loaded!');
                        console.log('token' + token);
                        document.getElementById('RecaptchaValue').value = token;
                    })
                    .catch(err => {
                        console.log('Error: ');
                        console.log(err.description);
                        console.log(err);
                    });
            });
        </script>*@
}